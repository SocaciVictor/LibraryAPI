@page "/books"
@using LibraryAdminPage.Components.Models
@inject LibraryAdminPage.Components.Interfaces.IBookService BookService
@inject NavigationManager Nav

<h3>Books</h3>
<NavLink class="btn btn-primary mb-3"
        href="@("/books/edit")">
    
    New Book
</NavLink>

@if (books == null)
{
    <p><em>Loading…</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr><th>Id</th><th>Title</th><th>AuthorId</th><th>Qty</th><th></th></tr>
        </thead>
        <tbody>
            @foreach (var b in books)
            {
                <tr>
                    <td>@b.Id</td>
                    <td>@b.Title</td>
                    <td>@b.AuthorId</td>
                    <td>@b.Quantity</td>
                    <td>
                        <NavLink class="btn btn-sm btn-secondary me-1"
                                href="@($"/books/edit/{b.Id}")">
                            Edit
                        </NavLink>
                        <button class="btn btn-sm btn-danger"
                                @onclick='async () => await Delete(b.Id)'>
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<BookDto>? books;

    protected override async Task OnInitializedAsync()
    {
        books = await BookService.GetAllAsync();
    }

    async Task Delete(int id)
    {
        if (await BookService.DeleteAsync(id))
            books = await BookService.GetAllAsync();
    }
}
